(this.webpackJsonpsplendr=this.webpackJsonpsplendr||[]).push([[0],[,,,,,,,,,,,,,,,,function(e,t,r){e.exports=r(32)},,,,,function(e,t,r){},,function(e,t,r){},function(e,t,r){},function(e,t,r){},function(e,t,r){},function(e,t,r){},,,,function(e,t,r){},function(e,t,r){"use strict";r.r(t);var o,n,a,i,c,l,u=r(0),s=r.n(u),p=r(13),m=r.n(p),h=(r(21),r(5)),b=r(6),d=r(10),v=r(9),y=r(3),f=r(2),g=(r(11),r(1)),C=[{pointValue:0,color:"red",tier:1,costs:[]},{pointValue:0,color:"red",tier:1,costs:[]},{pointValue:0,color:"blue",tier:1,costs:[]},{pointValue:0,color:"blue",tier:1,costs:[]},{pointValue:0,color:"green",tier:1,costs:[]},{pointValue:0,color:"green",tier:1,costs:[]},{pointValue:0,color:"white",tier:1,costs:[]},{pointValue:0,color:"white",tier:1,costs:[]},{pointValue:0,color:"black",tier:1,costs:[]},{pointValue:0,color:"black",tier:1,costs:[]}],k=(o=function(){function e(t,r){var o=this;Object(h.a)(this,e),this.id=void 0,Object(y.a)(this,"name",n,this),Object(y.a)(this,"chips",a,this),Object(y.a)(this,"tempChips",i,this),Object(y.a)(this,"nobles",c,this),Object(y.a)(this,"tableau",l,this),this.reserveCards=[],this.id=t,this.name=r,C.forEach((function(e){return o.tableau.push(e)}))}return Object(b.a)(e,[{key:"costReductionFor",value:function(e){return this.tableau.filter((function(t){return t.color===e})).length}},{key:"buyingPowerForColor",value:function(e){return(this.chips.get(e)||0)+this.tableau.filter((function(t){return t.color===e})).length}},{key:"canBuyCard",value:function(e){var t=this,r=0;e.costs.forEach((function(e){var o=t.buyingPowerForColor(e.color);e.amount>o&&(r+=e.amount-o)}));var o=this.chips.get("wild")||0;return r-o<=0}},{key:"fulfillsRequirementsForNoble",value:function(e){var t=this;return 0===e.cardRequirements.filter((function(e){return!t.meetsNobleRequirement(e)})).length}},{key:"meetsNobleRequirement",value:function(e){return this.tableau.filter((function(t){return t.color===e.color})).length>=e.amount}},{key:"saveTempChips",value:function(){var e=this;this.tempChips.forEach((function(t){var r=e.chips.get(t)||0;e.chips.set(t,r+1)})),this.tempChips=[]}},{key:"addChip",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(r)this.tempChips.push(e);else{var o=this.chips.get(e)||0;this.chips.set(e,o+t)}}},{key:"removeChip",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(r){var o=this.tempChips.indexOf(e);this.tempChips.splice(o,1)}var n=this.chips.get(e);n&&(console.log("removing chip",e,n,t),n>=t?this.chips.set(e,n-t):this.chips.set(e,0))}},{key:"getChipCount",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(e)return this.tempChips.length;var t=Array.from(this.chips.values());return t.length?t.reduce((function(e,t){return e+t})):0}},{key:"canReserveCard",get:function(){return this.reserveCards.length<3}},{key:"totalPoints",get:function(){var e=0;this.tableau.forEach((function(t){return e+=t.pointValue}));var t=0;return this.nobles.forEach((function(e){return t+=e.pointValue})),e+t}},{key:"chipCount",get:function(){return this.getChipCount()}},{key:"tempChipCount",get:function(){return this.getChipCount(!0)}},{key:"hasTempChips",get:function(){return this.tempChipCount>0}}]),e}(),n=Object(f.a)(o.prototype,"name",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),a=Object(f.a)(o.prototype,"chips",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),i=Object(f.a)(o.prototype,"tempChips",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),c=Object(f.a)(o.prototype,"nobles",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),l=Object(f.a)(o.prototype,"tableau",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Object(f.a)(o.prototype,"canReserveCard",[g.computed],Object.getOwnPropertyDescriptor(o.prototype,"canReserveCard"),o.prototype),Object(f.a)(o.prototype,"totalPoints",[g.computed],Object.getOwnPropertyDescriptor(o.prototype,"totalPoints"),o.prototype),Object(f.a)(o.prototype,"chipCount",[g.computed],Object.getOwnPropertyDescriptor(o.prototype,"chipCount"),o.prototype),Object(f.a)(o.prototype,"tempChipCount",[g.computed],Object.getOwnPropertyDescriptor(o.prototype,"tempChipCount"),o.prototype),Object(f.a)(o.prototype,"hasTempChips",[g.computed],Object.getOwnPropertyDescriptor(o.prototype,"hasTempChips"),o.prototype),Object(f.a)(o.prototype,"removeChip",[g.action],Object.getOwnPropertyDescriptor(o.prototype,"removeChip"),o.prototype),o),O=["white","blue","green","red","black"];function w(e){return JSON.stringify(e.cardRequirements)}var j=[{pointValue:3,cardRequirements:[{color:"blue",amount:4},{color:"white",amount:4}]},{pointValue:3,cardRequirements:[{color:"blue",amount:4},{color:"green",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:4},{color:"red",amount:4}]},{pointValue:3,cardRequirements:[{color:"red",amount:4},{color:"green",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:4},{color:"white",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"blue",amount:3},{color:"white",amount:3}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"red",amount:3},{color:"white",amount:3}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"red",amount:3},{color:"green",amount:3}]},{pointValue:3,cardRequirements:[{color:"green",amount:3},{color:"blue",amount:3},{color:"red",amount:3}]},{pointValue:3,cardRequirements:[{color:"green",amount:3},{color:"blue",amount:3},{color:"white",amount:3}]}],V=r(15);function E(e){return e.map((function(e){return{sort:Math.random(),value:e}})).sort((function(e,t){return e.sort-t.sort})).map((function(e){return e.value}))}var P,N,S,R,z,T,q,H,F,I,x,D,J,A,M,B=[{color:"white",pointValue:1,tier:1,costs:[{color:"green",amount:4}]},{color:"blue",pointValue:1,tier:1,costs:[{color:"red",amount:4}]},{color:"green",pointValue:1,tier:1,costs:[{color:"black",amount:4}]},{color:"red",pointValue:1,tier:1,costs:[{color:"white",amount:4}]},{color:"black",pointValue:1,tier:1,costs:[{color:"blue",amount:4}]},{color:"white",pointValue:0,tier:1,costs:[{color:"red",amount:2},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"black",amount:2}]},{color:"green",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"blue",amount:1}]},{color:"red",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"green",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"green",amount:2},{color:"red",amount:1}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:3}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"black",amount:3}]},{color:"green",pointValue:0,tier:1,costs:[{color:"red",amount:3}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:3}]},{color:"black",pointValue:0,tier:1,costs:[{color:"green",amount:3}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:1},{color:"green",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"green",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"green",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"green",amount:1},{color:"black",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"green",amount:1},{color:"red",amount:1}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"black",amount:2}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"green",amount:2},{color:"black",amount:2}]},{color:"green",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"red",amount:2}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"red",amount:2}]},{color:"black",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"green",amount:2}]}],G=[{color:"red",pointValue:3,tier:2,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]},{color:"red",pointValue:3,tier:2,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]},{color:"red",pointValue:3,tier:2,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]},{color:"red",pointValue:3,tier:2,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]}],K=[{color:"white",pointValue:3,tier:3,costs:[{color:"blue",amount:3},{color:"green",amount:3},{color:"red",amount:5},{color:"black",amount:3}]},{color:"blue",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"green",amount:3},{color:"red",amount:3},{color:"black",amount:5}]},{color:"green",pointValue:3,tier:3,costs:[{color:"white",amount:5},{color:"blue",amount:3},{color:"red",amount:3},{color:"black",amount:3}]},{color:"red",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]},{color:"black",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"blue",amount:3},{color:"green",amount:5},{color:"red",amount:3}]},{color:"white",pointValue:4,tier:3,costs:[{color:"black",amount:7}]},{color:"black",pointValue:4,tier:3,costs:[{color:"red",amount:7}]},{color:"blue",pointValue:4,tier:3,costs:[{color:"white",amount:7}]},{color:"red",pointValue:4,tier:3,costs:[{color:"green",amount:7}]},{color:"green",pointValue:4,tier:3,costs:[{color:"blue",amount:7}]},{color:"red",pointValue:4,tier:3,costs:[{color:"blue",amount:3},{color:"green",amount:6},{color:"red",amount:3}]},{color:"black",pointValue:4,tier:3,costs:[{color:"green",amount:3},{color:"red",amount:6},{color:"black",amount:3}]}],L=(P=function(){function e(t){Object(h.a)(this,e),Object(y.a)(this,"currentRound",N,this),this.players=[],Object(y.a)(this,"chipStacks",S,this),Object(y.a)(this,"cardStacks",R,this),Object(y.a)(this,"nobles",z,this),Object(y.a)(this,"currentPlayerIndex",T,this),Object(y.a)(this,"singleChipHandler",q,this),Object(y.a)(this,"doubleChipHandler",H,this),Object(y.a)(this,"purchaseHandler",F,this),Object(y.a)(this,"returnChipHandler",I,this),Object(y.a)(this,"reserveHandler",x,this),this.initializePlayers(t),this.initializeChips(4===t?7:t+2),this.initializeCards(),this.initializeNobles(t+1)}return Object(b.a)(e,[{key:"initializePlayers",value:function(e){var t,r,o=this;t=e,r=function(e){o.players.push(new k(e+1,"player"))},Object(V.a)(Array(t)).forEach((function(e,t){r(t)}))}},{key:"initializeChips",value:function(e){var t=this;O.forEach((function(r){t.chipStacks.set(r,e)})),this.chipStacks.set("wild",5)}},{key:"initializeCards",value:function(){this.cardStacks.set(1,E(B)),this.cardStacks.set(2,E(G)),this.cardStacks.set(3,E(K))}},{key:"initializeNobles",value:function(e){this.nobles=E(j).splice(0,e)}},{key:"playerCanPurchase",value:function(e){return!this.currentPlayer.hasTempChips&&this.currentPlayer.canBuyCard(e)}},{key:"nobleCheck",value:function(){var e=this;if(this.nobles.filter((function(t){return e.currentPlayer.fulfillsRequirementsForNoble(t)})).length>0){var t=this.nobles.splice(0,1)[0];this.currentPlayer.nobles.push(t)}}},{key:"removeChips",value:function(e,t){var r=(this.chipStacks.get(e)||0)-t;this.chipStacks.set(e,r<0?0:r)}},{key:"addChips",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,r=this.chipStacks.get(e)||0;this.chipStacks.set(e,r+t)}},{key:"chipColorForId",value:function(e){return e.split("-")[0]}},{key:"endPlayerTurn",value:function(){this.nobleCheck(),this.currentPlayerIndex++,this.currentPlayerIndex>=this.players.length&&(this.currentRound++,this.currentPlayerIndex=0)}},{key:"currentPlayer",get:function(){return this.players[this.currentPlayerIndex]}},{key:"playerCanReserve",get:function(){return!this.currentPlayer.hasTempChips&&this.currentPlayer.canReserveCard}}]),e}(),N=Object(f.a)(P.prototype,"currentRound",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),S=Object(f.a)(P.prototype,"chipStacks",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),R=Object(f.a)(P.prototype,"cardStacks",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),z=Object(f.a)(P.prototype,"nobles",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),T=Object(f.a)(P.prototype,"currentPlayerIndex",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Object(f.a)(P.prototype,"currentPlayer",[g.computed],Object.getOwnPropertyDescriptor(P.prototype,"currentPlayer"),P.prototype),Object(f.a)(P.prototype,"playerCanReserve",[g.computed],Object.getOwnPropertyDescriptor(P.prototype,"playerCanReserve"),P.prototype),q=Object(f.a)(P.prototype,"singleChipHandler",[g.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var r=e.chipColorForId(t);e.removeChips(r,1),e.currentPlayer.addChip(r,1,!0),e.currentPlayer.tempChipCount>=3&&(e.currentPlayer.saveTempChips(),e.endPlayerTurn())}}}),H=Object(f.a)(P.prototype,"doubleChipHandler",[g.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var r=e.chipColorForId(t);e.removeChips(r,2),e.currentPlayer.addChip(r,2),e.endPlayerTurn()}}}),F=Object(f.a)(P.prototype,"purchaseHandler",[g.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var r=t.split("-"),o=Number(r[0]),n=Number(r[1]),a=e.cardStacks.get(o);if(a){var i=a.splice(n,1)[0],c=0;i.costs.forEach((function(t){var r=e.currentPlayer.costReductionFor(t.color),o=t.amount-r,n=e.currentPlayer.chips.get(t.color)||0;o>n&&(c+=o-n);var a=o>=0?o:0;e.currentPlayer.removeChip(t.color,a),e.addChips(t.color,a)})),c&&(e.currentPlayer.removeChip("wild",c),e.addChips("wild",c)),e.currentPlayer.tableau.push(i),e.endPlayerTurn()}else e.endPlayerTurn()}}}),I=Object(f.a)(P.prototype,"returnChipHandler",[g.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var r=e.chipColorForId(t);e.currentPlayer.removeChip(r,1,!0),e.addChips(r,1)}}}),x=Object(f.a)(P.prototype,"reserveHandler",[g.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var r=t.split("-"),o=Number(r[0]),n=Number(r[1]),a=e.cardStacks.get(o);if(a){var i=a.splice(n,1)[0];e.currentPlayer.reserveCards.push(i);var c=e.chipStacks.get("wild");c&&c>0&&(e.chipStacks.set("wild",c-1),e.currentPlayer.addChip("wild")),e.endPlayerTurn()}}}}),P),Q={gameStore:new function e(){Object(h.a)(this,e),this.game=new L(4)}},U=r(7),W=r(8),X=(r(23),Object(U.a)((J=function(e){Object(d.a)(r,e);var t=Object(v.a)(r);function r(){var e;Object(h.a)(this,r);for(var o=arguments.length,n=new Array(o),a=0;a<o;a++)n[a]=arguments[a];return e=t.call.apply(t,[this].concat(n)),Object(y.a)(e,"tempName",A,Object(W.a)(e)),e.handleChange=function(t){e.tempName=t.target.value},e.handleSubmit=function(t){e.props.player.name=e.tempName,t.preventDefault()},e}return Object(b.a)(r,[{key:"render",value:function(){var e=this.props.player,t=Q.gameStore.game.currentPlayer===this.props.player?"active":"";return s.a.createElement("div",{className:"PlayerComponent"},s.a.createElement("div",{className:t},s.a.createElement("div",null,"player ",e.name),s.a.createElement("div",null,"id ",e.id),s.a.createElement("div",null,"points ",e.totalPoints),s.a.createElement("div",null,"chips (",e.chipCount,") ",JSON.stringify(e.chips)),s.a.createElement("div",null,"tempchips (",e.tempChipCount,")",JSON.stringify(e.tempChips)),s.a.createElement("div",null,"cards (",e.tableau.length,")",JSON.stringify(e.tableau)),s.a.createElement("div",null,"nobles (",e.nobles.length,")",JSON.stringify(e.nobles)),s.a.createElement("form",{onSubmit:this.handleSubmit},s.a.createElement("label",null,"change name:",s.a.createElement("input",{type:"text",value:this.tempName,onChange:this.handleChange})))))}}]),r}(s.a.Component),A=Object(f.a)(J.prototype,"tempName",[g.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),D=J))||D),Y=(r(24),function(e){return s.a.createElement("div",{className:"NobleComponent"},s.a.createElement("div",{className:"point-value"},e.noble.pointValue),e.noble.cardRequirements.map((function(e){return s.a.createElement("div",{className:"requirement "+e.color,key:"".concat(e.color).concat(e.amount)},e.amount)})))}),Z=(r(25),Object(U.a)((function(e){var t=Q.gameStore.game,r=t.cardStacks.get(e.cardCostTier);if(!r)return s.a.createElement("div",null);var o=r.length-4,n=o>0?o:0,a=r.slice(0,4);return s.a.createElement("div",{className:"CardStackComponent"},s.a.createElement("div",{className:"card remaining"},n," cards remaining"),a.map((function(r,o){var n=t.playerCanPurchase(r),a="".concat(e.cardCostTier,"-").concat(o);return s.a.createElement("div",{className:"card",key:a},s.a.createElement("div",{className:"point-value"},r.pointValue>0?r.pointValue:"\xa0"),s.a.createElement("div",{className:"indicator"},s.a.createElement("div",{className:"color-indicator "+r.color}," ")),s.a.createElement("div",{className:"costs"},r.costs.map((function(e){var t="cost ".concat(e.color);return s.a.createElement("div",{className:t,key:t},e.amount)}))),s.a.createElement("div",{className:"actions"},s.a.createElement("button",{id:a,onClick:function(e){return t.reserveHandler(e.currentTarget.id)},disabled:!t.playerCanReserve},"hold"),s.a.createElement("button",{id:a,onClick:function(e){return t.purchaseHandler(e.currentTarget.id)},disabled:!n},"buy")))})))}))),$=(r(26),Object(U.a)((function(){var e=Q.gameStore.game,t=e.currentPlayer,r=Array.from(e.chipStacks.keys());return s.a.createElement("div",{className:"ChipStackComponent"},s.a.createElement("div",{className:"temp-chips"},"temp chips:",s.a.createElement("br",null),t.tempChips.map((function(t){return s.a.createElement("div",{key:t},s.a.createElement("div",{className:"chip-stack ".concat(t)},"1"),s.a.createElement("button",{id:"".concat(t,"-temp-chip"),onClick:function(t){return e.returnChipHandler(t.currentTarget.id)}},"return"))}))),r.map((function(r){var o,n=e.chipStacks.get(r)||0,a=(null===(o=t.tempChips.find((function(e){return e===r})))||void 0===o?void 0:o.length)?1:0,i=n&&0===a,c=n>=4&&!t.tempChipCount;return s.a.createElement("div",{key:r},s.a.createElement("div",{className:"chip-stack ".concat(r)},n),"wild"!==r&&s.a.createElement(s.a.Fragment,null,s.a.createElement("button",{id:"".concat(r,"-1"),disabled:!i,onClick:function(t){return e.singleChipHandler(t.currentTarget.id)}},"grab 1"),s.a.createElement("button",{id:"".concat(r,"-2"),disabled:!c,onClick:function(t){return e.doubleChipHandler(t.currentTarget.id)}},"grab 2")))})))}))),_=(r(27),Object(U.a)(M=function(e){Object(d.a)(r,e);var t=Object(v.a)(r);function r(){return Object(h.a)(this,r),t.apply(this,arguments)}return Object(b.a)(r,[{key:"render",value:function(){var e=Q.gameStore.game;return s.a.createElement("div",{className:"GameComponent"},s.a.createElement("div",null,"round #",e.currentRound,", players:",e.players.map((function(e){return s.a.createElement(X,{player:e,key:e.id})}))),s.a.createElement("div",null,"chips:",s.a.createElement($,null)),s.a.createElement("div",null,"cards:",s.a.createElement(Z,{cardCostTier:1}),s.a.createElement(Z,{cardCostTier:2}),s.a.createElement(Z,{cardCostTier:3})),s.a.createElement("div",null,"nobles:",e.nobles.map((function(e){return s.a.createElement(Y,{noble:e,key:w(e)})}))))}}]),r}(s.a.Component))||M);var ee=function(){return s.a.createElement("div",{className:"App"},s.a.createElement("div",null,"it not splendor"),s.a.createElement(_,null))};r(28),r(31);m.a.render(s.a.createElement(s.a.StrictMode,null,s.a.createElement(ee,null)),document.getElementById("root"))}],[[16,1,2]]]);
//# sourceMappingURL=main.e15c068b.chunk.js.map