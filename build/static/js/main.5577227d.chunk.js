(this.webpackJsonpsplendr=this.webpackJsonpsplendr||[]).push([[0],{42:function(e,t,o){e.exports=o(86)},47:function(e,t,o){},77:function(e,t){},80:function(e,t,o){},81:function(e,t,o){},82:function(e,t,o){},83:function(e,t,o){},84:function(e,t,o){},85:function(e,t,o){},86:function(e,t,o){"use strict";o.r(t);var r,n,a,c,i=o(0),l=o.n(i),u=o(39),s=o.n(u),p=(o(47),o(5)),m=o(6),h=o(15),d=o(14),b=o(3),g=o(2),y=(o(10),o(1)),v=(r=function(){function e(t,o){Object(p.a)(this,e),this.id=void 0,Object(b.a)(this,"name",n,this),Object(b.a)(this,"chips",a,this),Object(b.a)(this,"tempChips",c,this),this.tableau=[],this.reserveCards=[],this.id=t,this.name=o}return Object(m.a)(e,[{key:"costReductionFor",value:function(e){return this.tableau.filter((function(t){return t.color===e})).length}},{key:"buyingPowerForColor",value:function(e){return(this.chips.get(e)||0)+this.tableau.filter((function(t){return t.color===e})).length}},{key:"canBuyCard",value:function(e){var t=this,o=0;e.costs.forEach((function(e){var r=t.buyingPowerForColor(e.color);e.amount>r&&(o+=e.amount-r)}));var r=this.chips.get("wild")||0;return o-r<=0}},{key:"saveTempChips",value:function(){var e=this;this.tempChips.forEach((function(t,o){var r=e.chips.get(o)||0;e.chips.set(o,r+t)})),this.tempChips=new Map}},{key:"addChip",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=o?this.tempChips:this.chips,n=r.get(e)||0;r.set(e,n+t)}},{key:"removeChip",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=o?this.tempChips:this.chips,n=r.get(e);n&&(n>t?r.set(e,n-t):r.set(e,0))}},{key:"getChipCount",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0],t=Array.from(e?this.tempChips.values():this.chips.values());return t.length?t.reduce((function(e,t){return e+t})):0}},{key:"canReserveCard",get:function(){return this.reserveCards.length<3}},{key:"chipCount",get:function(){return this.getChipCount()}},{key:"tempChipCount",get:function(){return this.getChipCount(!0)}},{key:"hasTempChips",get:function(){return this.tempChipCount>0}}]),e}(),n=Object(g.a)(r.prototype,"name",[y.n],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),a=Object(g.a)(r.prototype,"chips",[y.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),c=Object(g.a)(r.prototype,"tempChips",[y.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),Object(g.a)(r.prototype,"canReserveCard",[y.g],Object.getOwnPropertyDescriptor(r.prototype,"canReserveCard"),r.prototype),Object(g.a)(r.prototype,"chipCount",[y.g],Object.getOwnPropertyDescriptor(r.prototype,"chipCount"),r.prototype),Object(g.a)(r.prototype,"tempChipCount",[y.g],Object.getOwnPropertyDescriptor(r.prototype,"tempChipCount"),r.prototype),Object(g.a)(r.prototype,"hasTempChips",[y.g],Object.getOwnPropertyDescriptor(r.prototype,"hasTempChips"),r.prototype),r),f=[{pointValue:3,cardRequirements:[{color:"blue",amount:4},{color:"white",amount:4}]},{pointValue:3,cardRequirements:[{color:"blue",amount:4},{color:"green",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:4},{color:"red",amount:4}]},{pointValue:3,cardRequirements:[{color:"red",amount:4},{color:"green",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:4},{color:"white",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"blue",amount:3},{color:"white",amount:3}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"red",amount:3},{color:"white",amount:3}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"red",amount:3},{color:"green",amount:3}]},{pointValue:3,cardRequirements:[{color:"green",amount:3},{color:"blue",amount:3},{color:"red",amount:3}]},{pointValue:3,cardRequirements:[{color:"green",amount:3},{color:"blue",amount:3},{color:"white",amount:3}]}],C=o(41);function k(e){return e.map((function(e){return{sort:Math.random(),value:e}})).sort((function(e,t){return e.sort-t.sort})).map((function(e){return e.value}))}var w,O,j,V,E,P,S,N,R,z,T,I,q,H,x,F,M=[{color:"white",pointValue:1,tier:1,costs:[{color:"green",amount:4}]},{color:"blue",pointValue:1,tier:1,costs:[{color:"red",amount:4}]},{color:"green",pointValue:1,tier:1,costs:[{color:"black",amount:4}]},{color:"red",pointValue:1,tier:1,costs:[{color:"white",amount:4}]},{color:"black",pointValue:1,tier:1,costs:[{color:"blue",amount:4}]},{color:"white",pointValue:0,tier:1,costs:[{color:"red",amount:2},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"black",amount:2}]},{color:"green",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"blue",amount:1}]},{color:"red",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"green",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"green",amount:2},{color:"red",amount:1}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:3}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"black",amount:3}]},{color:"green",pointValue:0,tier:1,costs:[{color:"red",amount:3}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:3}]},{color:"black",pointValue:0,tier:1,costs:[{color:"green",amount:3}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:1},{color:"green",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"green",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"green",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"green",amount:1},{color:"black",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"green",amount:1},{color:"red",amount:1}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"black",amount:2}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"green",amount:2},{color:"black",amount:2}]},{color:"green",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"red",amount:2}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"red",amount:2}]},{color:"black",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"green",amount:2}]}],D=[{color:"red",pointValue:3,tier:2,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]},{color:"red",pointValue:3,tier:2,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]},{color:"red",pointValue:3,tier:2,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]},{color:"red",pointValue:3,tier:2,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]}],A=[{color:"white",pointValue:3,tier:3,costs:[{color:"blue",amount:3},{color:"green",amount:3},{color:"red",amount:5},{color:"black",amount:3}]},{color:"blue",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"green",amount:3},{color:"red",amount:3},{color:"black",amount:5}]},{color:"green",pointValue:3,tier:3,costs:[{color:"white",amount:5},{color:"blue",amount:3},{color:"red",amount:3},{color:"black",amount:3}]},{color:"red",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]},{color:"black",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"blue",amount:3},{color:"green",amount:5},{color:"red",amount:3}]},{color:"white",pointValue:4,tier:3,costs:[{color:"black",amount:7}]},{color:"black",pointValue:4,tier:3,costs:[{color:"red",amount:7}]},{color:"blue",pointValue:4,tier:3,costs:[{color:"white",amount:7}]},{color:"red",pointValue:4,tier:3,costs:[{color:"green",amount:7}]},{color:"green",pointValue:4,tier:3,costs:[{color:"blue",amount:7}]},{color:"red",pointValue:4,tier:3,costs:[{color:"blue",amount:3},{color:"green",amount:6},{color:"red",amount:3}]},{color:"black",pointValue:4,tier:3,costs:[{color:"green",amount:3},{color:"red",amount:6},{color:"black",amount:3}]}],J=["white","blue","green","red","black"],B=(w=function(){function e(t){Object(p.a)(this,e),this.players=[],Object(b.a)(this,"chipStacks",O,this),Object(b.a)(this,"cardStacks",j,this),Object(b.a)(this,"nobles",V,this),Object(b.a)(this,"currentRound",E,this),Object(b.a)(this,"currentPlayerIndex",P,this),Object(b.a)(this,"singleChipHandler",S,this),Object(b.a)(this,"doubleChipHandler",N,this),Object(b.a)(this,"purchaseHandler",R,this),Object(b.a)(this,"reserveHandler",z,this),this.initializePlayers(t),this.initializeChips(4===t?7:t+2),this.initializeCards(),this.initializeNobles(t+1)}return Object(m.a)(e,[{key:"initializePlayers",value:function(e){var t,o,r=this;t=e,o=function(e){r.players.push(new v(e+1,"player"))},Object(C.a)(Array(t)).forEach((function(e,t){o(t)}))}},{key:"initializeChips",value:function(e){var t=this;J.forEach((function(o){t.chipStacks.set(o,e)})),this.chipStacks.set("wild",5)}},{key:"initializeCards",value:function(){this.cardStacks.set(1,k(M)),this.cardStacks.set(2,k(D)),this.cardStacks.set(3,k(A))}},{key:"initializeNobles",value:function(e){this.nobles=k(f).splice(0,e)}},{key:"playerCanPurchase",value:function(e){return!this.currentPlayer.hasTempChips&&this.currentPlayer.canBuyCard(e)}},{key:"removeChips",value:function(e,t){var o=(this.chipStacks.get(e)||0)-t;this.chipStacks.set(e,o<0?0:o)}},{key:"addChips",value:function(e,t){var o=this.chipStacks.get(e)||0;this.chipStacks.set(e,o+t)}},{key:"chipColorForId",value:function(e){return e.split("-")[0]}},{key:"endPlayerTurn",value:function(){this.currentPlayerIndex++,this.currentPlayerIndex>=this.players.length&&(this.currentRound++,this.currentPlayerIndex=0)}},{key:"currentPlayer",get:function(){return this.players[this.currentPlayerIndex]}},{key:"playerCanReserve",get:function(){return!this.currentPlayer.hasTempChips&&this.currentPlayer.canReserveCard}}]),e}(),O=Object(g.a)(w.prototype,"chipStacks",[y.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),j=Object(g.a)(w.prototype,"cardStacks",[y.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),V=Object(g.a)(w.prototype,"nobles",[y.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),E=Object(g.a)(w.prototype,"currentRound",[y.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),P=Object(g.a)(w.prototype,"currentPlayerIndex",[y.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),Object(g.a)(w.prototype,"currentPlayer",[y.g],Object.getOwnPropertyDescriptor(w.prototype,"currentPlayer"),w.prototype),Object(g.a)(w.prototype,"playerCanReserve",[y.g],Object.getOwnPropertyDescriptor(w.prototype,"playerCanReserve"),w.prototype),S=Object(g.a)(w.prototype,"singleChipHandler",[y.f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=e.chipColorForId(t.currentTarget.id);e.removeChips(o,1),e.currentPlayer.addChip(o,1,!0),e.currentPlayer.tempChipCount>=3&&(e.currentPlayer.saveTempChips(),e.endPlayerTurn())}}}),N=Object(g.a)(w.prototype,"doubleChipHandler",[y.f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=e.chipColorForId(t.currentTarget.id);e.removeChips(o,2),e.currentPlayer.addChip(o,2),e.endPlayerTurn()}}}),R=Object(g.a)(w.prototype,"purchaseHandler",[y.f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=t.currentTarget.id.split("-"),r=Number(o[0]),n=Number(o[1]),a=e.cardStacks.get(r);if(a){var c=a.splice(n,1)[0],i=0;c.costs.forEach((function(t){var o=e.currentPlayer.costReductionFor(t.color),r=t.amount-o,n=e.currentPlayer.chips.get(t.color)||0;r>n&&(i+=r-n);var a=r>=0?r:0;e.currentPlayer.removeChip(t.color,a),e.addChips(t.color,a)})),i&&(e.currentPlayer.removeChip("wild",i),e.addChips("wild",i)),e.currentPlayer.tableau.push(c),e.endPlayerTurn()}else e.endPlayerTurn()}}}),z=Object(g.a)(w.prototype,"reserveHandler",[y.f],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=t.currentTarget.id.split("-"),r=Number(o[0]),n=Number(o[1]),a=e.cardStacks.get(r);if(a){var c=a.splice(n,1)[0];e.currentPlayer.reserveCards.push(c);var i=e.chipStacks.get("wild");i&&i>0&&(e.chipStacks.set("wild",i-1),e.currentPlayer.addChip("wild")),e.endPlayerTurn()}}}}),w),G=o(40),K=o.n(G),L=o(88),Q=(T=function(){function e(t){var o=this;Object(p.a)(this,e),this.socket=void 0,Object(b.a)(this,"clientId",I,this);var r=document.cookie;console.log(r),console.log(Object(L.a)()),this.socket=K()(t),this.socket.on("connect",(function(){console.log("connected to server"),o.socket.emit("message","hi from me")}))}return Object(m.a)(e,[{key:"sendMessage",value:function(e){this.socket.emit("message",e)}},{key:"configureClientId",value:function(){}}]),e}(),I=Object(g.a)(T.prototype,"clientId",[y.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),T),U={gameStore:new function e(){Object(p.a)(this,e),this.game=new B(3)},client:new Q("http://localhost:8080")},W=o(8),X=o(13),Y=(o(80),Object(W.a)((H=function(e){Object(h.a)(o,e);var t=Object(d.a)(o);function o(){var e;Object(p.a)(this,o);for(var r=arguments.length,n=new Array(r),a=0;a<r;a++)n[a]=arguments[a];return e=t.call.apply(t,[this].concat(n)),Object(b.a)(e,"name",x,Object(X.a)(e)),e.handleChange=function(t){e.name=t.target.value},e.handleSubmit=function(t){e.props.player.name=e.name,t.preventDefault()},e}return Object(m.a)(o,[{key:"render",value:function(){var e=this.props.player,t=U.gameStore.game.currentPlayer===this.props.player?"active":"";return l.a.createElement("div",{className:"PlayerComponent"},l.a.createElement("div",{className:t},l.a.createElement("div",null,"player ",e.name),l.a.createElement("div",null,"id ",e.id),l.a.createElement("div",null,"chips (",e.chipCount,") ",JSON.stringify(e.chips)),l.a.createElement("div",null,"tempchips (",e.tempChipCount,")",JSON.stringify(e.tempChips)),l.a.createElement("form",{onSubmit:this.handleSubmit},l.a.createElement("label",null,"change name:",l.a.createElement("input",{type:"text",value:this.name,onChange:this.handleChange})))))}}]),o}(l.a.Component),x=Object(g.a)(H.prototype,"name",[y.n],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),q=H))||q),Z=(o(81),function(e){return l.a.createElement("div",{className:"NobleComponent"},l.a.createElement("div",{className:"point-value"},e.noble.pointValue),e.noble.cardRequirements.map((function(e){return l.a.createElement("div",{className:"requirement "+e.color},e.amount)})))}),$=(o(82),Object(W.a)((function(e){var t=U.gameStore.game,o=t.cardStacks.get(e.cardCostTier);if(!o)return l.a.createElement("div",null);var r=o.length-4,n=r>0?r:0,a=o.slice(0,4);return l.a.createElement("div",{className:"CardStackComponent"},l.a.createElement("div",{className:"card remaining"},n," cards remaining"),a.map((function(o,r){var n=t.playerCanPurchase(o),a="".concat(e.cardCostTier,"-").concat(r);return l.a.createElement("div",{className:"card"},l.a.createElement("div",{className:"point-value"},o.pointValue>0?o.pointValue:"\xa0"),l.a.createElement("div",{className:"indicator"},l.a.createElement("div",{className:"color-indicator "+o.color}," ")),l.a.createElement("div",{className:"costs"},o.costs.map((function(e){return l.a.createElement("div",{className:"cost ".concat(e.color)},e.amount)}))),l.a.createElement("div",{className:"actions"},l.a.createElement("button",{id:a,onClick:t.reserveHandler,disabled:!t.playerCanReserve},"hold"),l.a.createElement("button",{id:a,onClick:t.purchaseHandler,disabled:!n},"buy")))})))}))),_=(o(83),Object(W.a)((function(){var e=U.gameStore.game,t=e.currentPlayer,o=Array.from(e.chipStacks.keys());return l.a.createElement("div",{className:"ChipStackComponent"},o.map((function(o){var r=e.chipStacks.get(o)||0,n=t.tempChips.get(o)||0,a=r&&0===n,c=r>=4&&!t.tempChipCount;return l.a.createElement("div",null,l.a.createElement("div",{className:"chip-stack ".concat(o)},r),"wild"!==o&&l.a.createElement(l.a.Fragment,null,l.a.createElement("button",{id:"".concat(o,"-1"),disabled:!a,onClick:e.singleChipHandler},"grab 1"),l.a.createElement("button",{id:"".concat(o,"-2"),disabled:!c,onClick:e.doubleChipHandler},"grab 2")))})))}))),ee=(o(84),Object(W.a)(F=function(e){Object(h.a)(o,e);var t=Object(d.a)(o);function o(){return Object(p.a)(this,o),t.apply(this,arguments)}return Object(m.a)(o,[{key:"render",value:function(){var e=U.gameStore.game;return l.a.createElement("div",{className:"GameComponent"},l.a.createElement("div",null,"round #",e.currentRound,", players:",e.players.map((function(e){return l.a.createElement(Y,{player:e})}))),l.a.createElement("div",null,"chips:",l.a.createElement(_,null)),l.a.createElement("div",null,"cards:",l.a.createElement($,{cardCostTier:1}),l.a.createElement($,{cardCostTier:2}),l.a.createElement($,{cardCostTier:3})),l.a.createElement("div",null,"nobles:",e.nobles.map((function(e){return l.a.createElement(Z,{noble:e})}))))}}]),o}(l.a.Component))||F);var te=function(){return l.a.createElement("div",{className:"App"},l.a.createElement("div",null,"it not splendor"),l.a.createElement(ee,null))};o(85);s.a.render(l.a.createElement(l.a.StrictMode,null,l.a.createElement(te,null)),document.getElementById("root"))}},[[42,1,2]]]);
//# sourceMappingURL=main.5577227d.chunk.js.map