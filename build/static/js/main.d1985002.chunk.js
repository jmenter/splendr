(this.webpackJsonpsplendr=this.webpackJsonpsplendr||[]).push([[0],[,,,,,,,,,,,,,,,,function(e,t,o){e.exports=o(33)},,,,,function(e,t,o){},function(e,t,o){},,function(e,t,o){},function(e,t,o){},function(e,t,o){},function(e,t,o){},function(e,t,o){},,,,function(e,t,o){},function(e,t,o){"use strict";o.r(t);var r,n,a,l,c,i,u=o(0),s=o.n(u),m=o(13),p=o.n(m),h=(o(21),o(5)),b=o(6),d=o(9),g=o(8),f=(o(22),o(3)),v=o(2),y=(o(10),o(1)),k=[{pointValue:0,color:"red",tier:1,costs:[]},{pointValue:2,color:"red",tier:1,costs:[]},{pointValue:1,color:"blue",tier:1,costs:[]},{pointValue:0,color:"blue",tier:1,costs:[]},{pointValue:0,color:"green",tier:1,costs:[]},{pointValue:4,color:"green",tier:1,costs:[]},{pointValue:0,color:"white",tier:1,costs:[]},{pointValue:0,color:"white",tier:1,costs:[]},{pointValue:4,color:"black",tier:1,costs:[]},{pointValue:3,color:"black",tier:1,costs:[]}],w=(r=function(){function e(t,o){var r=this;Object(h.a)(this,e),this.id=void 0,Object(f.a)(this,"name",n,this),Object(f.a)(this,"chips",a,this),Object(f.a)(this,"tempChips",l,this),Object(f.a)(this,"nobles",c,this),Object(f.a)(this,"tableau",i,this),this.reserveCards=[],this.id=t,this.name=o,k.forEach((function(e){return r.tableau.push(e)}))}return Object(b.a)(e,[{key:"costReductionFor",value:function(e){return this.tableau.filter((function(t){return t.color===e})).length}},{key:"buyingPowerForColor",value:function(e){return(this.chips.get(e)||0)+this.tableau.filter((function(t){return t.color===e})).length}},{key:"canBuyCard",value:function(e){var t=this,o=0;e.costs.forEach((function(e){var r=t.buyingPowerForColor(e.color);e.amount>r&&(o+=e.amount-r)}));var r=this.chips.get("wild")||0;return o-r<=0}},{key:"fulfillsRequirementsForNoble",value:function(e){var t=this;return 0===e.cardRequirements.filter((function(e){return!t.meetsNobleRequirement(e)})).length}},{key:"meetsNobleRequirement",value:function(e){return this.tableau.filter((function(t){return t.color===e.color})).length>=e.amount}},{key:"saveTempChips",value:function(){var e=this;this.tempChips.forEach((function(t){var o=e.chips.get(t)||0;e.chips.set(t,o+1)})),this.tempChips=[]}},{key:"addChip",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(o)this.tempChips.push(e);else{var r=this.chips.get(e)||0;this.chips.set(e,r+t)}}},{key:"removeChip",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(o){var r=this.tempChips.indexOf(e);this.tempChips.splice(r,1)}var n=this.chips.get(e);n&&(console.log("removing chip",e,n,t),n>=t?this.chips.set(e,n-t):this.chips.set(e,0))}},{key:"getChipCount",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(e)return this.tempChips.length;var t=Array.from(this.chips.values());return t.length?t.reduce((function(e,t){return e+t})):0}},{key:"canReserveCard",get:function(){return this.reserveCards.length<3}},{key:"totalPoints",get:function(){var e=0;this.tableau.forEach((function(t){return e+=t.pointValue}));var t=0;return this.nobles.forEach((function(e){return t+=e.pointValue})),e+t}},{key:"chipCount",get:function(){return this.getChipCount()}},{key:"tempChipCount",get:function(){return this.getChipCount(!0)}},{key:"hasTempChips",get:function(){return this.tempChipCount>0}}]),e}(),n=Object(v.a)(r.prototype,"name",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),a=Object(v.a)(r.prototype,"chips",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),l=Object(v.a)(r.prototype,"tempChips",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),c=Object(v.a)(r.prototype,"nobles",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),i=Object(v.a)(r.prototype,"tableau",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Object(v.a)(r.prototype,"canReserveCard",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"canReserveCard"),r.prototype),Object(v.a)(r.prototype,"totalPoints",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"totalPoints"),r.prototype),Object(v.a)(r.prototype,"chipCount",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"chipCount"),r.prototype),Object(v.a)(r.prototype,"tempChipCount",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"tempChipCount"),r.prototype),Object(v.a)(r.prototype,"hasTempChips",[y.computed],Object.getOwnPropertyDescriptor(r.prototype,"hasTempChips"),r.prototype),Object(v.a)(r.prototype,"removeChip",[y.action],Object.getOwnPropertyDescriptor(r.prototype,"removeChip"),r.prototype),r),V=["white","blue","green","red","black"];function C(e){return JSON.stringify(e.cardRequirements)}var O=[{pointValue:3,cardRequirements:[{color:"blue",amount:4},{color:"white",amount:4}]},{pointValue:3,cardRequirements:[{color:"blue",amount:4},{color:"green",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:4},{color:"red",amount:4}]},{pointValue:3,cardRequirements:[{color:"red",amount:4},{color:"green",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:4},{color:"white",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"blue",amount:3},{color:"white",amount:3}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"red",amount:3},{color:"white",amount:3}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"red",amount:3},{color:"green",amount:3}]},{pointValue:3,cardRequirements:[{color:"green",amount:3},{color:"blue",amount:3},{color:"red",amount:3}]},{pointValue:3,cardRequirements:[{color:"green",amount:3},{color:"blue",amount:3},{color:"white",amount:3}]}],E=o(15);function j(e){return e.map((function(e){return{sort:Math.random(),value:e}})).sort((function(e,t){return e.sort-t.sort})).map((function(e){return e.value}))}var P,N,R,S,z,T,q,H,F,I,D,M,x,A,B,G,J,K,L=[{color:"white",pointValue:1,tier:1,costs:[{color:"green",amount:4}]},{color:"blue",pointValue:1,tier:1,costs:[{color:"red",amount:4}]},{color:"green",pointValue:1,tier:1,costs:[{color:"black",amount:4}]},{color:"red",pointValue:1,tier:1,costs:[{color:"white",amount:4}]},{color:"black",pointValue:1,tier:1,costs:[{color:"blue",amount:4}]},{color:"white",pointValue:0,tier:1,costs:[{color:"red",amount:2},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"black",amount:2}]},{color:"green",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"blue",amount:1}]},{color:"red",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"green",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"green",amount:2},{color:"red",amount:1}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:3}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"black",amount:3}]},{color:"green",pointValue:0,tier:1,costs:[{color:"red",amount:3}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:3}]},{color:"black",pointValue:0,tier:1,costs:[{color:"green",amount:3}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:1},{color:"green",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"green",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"green",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"green",amount:1},{color:"black",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"green",amount:1},{color:"red",amount:1}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"black",amount:2}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"green",amount:2},{color:"black",amount:2}]},{color:"green",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"red",amount:2}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"red",amount:2}]},{color:"black",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"green",amount:2}]},{color:"white",pointValue:0,tier:1,costs:[{color:"white",amount:3},{color:"blue",amount:1},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"green",amount:3},{color:"blue",amount:1},{color:"red",amount:1}]},{color:"green",pointValue:0,tier:1,costs:[{color:"green",amount:1},{color:"blue",amount:3},{color:"white",amount:1}]},{color:"red",pointValue:0,tier:1,costs:[{color:"red",amount:1},{color:"black",amount:3},{color:"white",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"red",amount:3},{color:"black",amount:1},{color:"green",amount:1}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"black",amount:1},{color:"green",amount:2}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"red",amount:2},{color:"white",amount:1},{color:"green",amount:2}]},{color:"green",pointValue:0,tier:1,costs:[{color:"red",amount:2},{color:"blue",amount:1},{color:"black",amount:2}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"green",amount:1},{color:"black",amount:2}]},{color:"black",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"red",amount:1},{color:"blue",amount:2}]},{color:"white",pointValue:0,tier:1,costs:[{color:"green",amount:2},{color:"red",amount:1},{color:"blue",amount:1},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"green",amount:1},{color:"red",amount:2},{color:"white",amount:1},{color:"black",amount:1}]},{color:"green",pointValue:0,tier:1,costs:[{color:"blue",amount:1},{color:"red",amount:1},{color:"white",amount:1},{color:"black",amount:2}]},{color:"red",pointValue:0,tier:1,costs:[{color:"blue",amount:1},{color:"green",amount:1},{color:"white",amount:2},{color:"black",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"green",amount:1},{color:"white",amount:1},{color:"red",amount:1}]}],Q=[{color:"white",pointValue:3,tier:2,costs:[{color:"white",amount:6}]},{color:"blue",pointValue:3,tier:2,costs:[{color:"blue",amount:6}]},{color:"green",pointValue:3,tier:2,costs:[{color:"green",amount:6}]},{color:"red",pointValue:3,tier:2,costs:[{color:"red",amount:6}]},{color:"black",pointValue:3,tier:2,costs:[{color:"black",amount:6}]},{color:"black",pointValue:2,tier:2,costs:[{color:"green",amount:4},{color:"blue",amount:1},{color:"red",amount:2}]},{color:"white",pointValue:2,tier:2,costs:[{color:"red",amount:4},{color:"green",amount:1},{color:"black",amount:2}]},{color:"blue",pointValue:2,tier:2,costs:[{color:"black",amount:4},{color:"white",amount:2},{color:"red",amount:1}]},{color:"green",pointValue:2,tier:2,costs:[{color:"white",amount:4},{color:"blue",amount:2},{color:"black",amount:1}]},{color:"red",pointValue:2,tier:2,costs:[{color:"blue",amount:4},{color:"white",amount:1},{color:"green",amount:2}]},{color:"black",pointValue:2,tier:2,costs:[{color:"white",amount:5}]},{color:"white",pointValue:2,tier:2,costs:[{color:"red",amount:5}]},{color:"blue",pointValue:2,tier:2,costs:[{color:"blue",amount:5}]},{color:"green",pointValue:2,tier:2,costs:[{color:"green",amount:5}]},{color:"red",pointValue:2,tier:2,costs:[{color:"black",amount:5}]},{color:"red",pointValue:2,tier:2,costs:[{color:"black",amount:5},{color:"white",amount:3}]},{color:"white",pointValue:2,tier:2,costs:[{color:"black",amount:3},{color:"red",amount:5}]},{color:"black",pointValue:2,tier:2,costs:[{color:"green",amount:5},{color:"red",amount:3}]},{color:"green",pointValue:2,tier:2,costs:[{color:"blue",amount:5},{color:"green",amount:3}]},{color:"blue",pointValue:2,tier:2,costs:[{color:"white",amount:5},{color:"blue",amount:3}]},{color:"white",pointValue:1,tier:2,costs:[{color:"red",amount:2},{color:"black",amount:2},{color:"green",amount:3}]},{color:"blue",pointValue:1,tier:2,costs:[{color:"red",amount:3},{color:"blue",amount:2},{color:"green",amount:2}]},{color:"green",pointValue:1,tier:2,costs:[{color:"white",amount:2},{color:"blue",amount:3},{color:"black",amount:2}]},{color:"red",pointValue:1,tier:2,costs:[{color:"white",amount:2},{color:"red",amount:2},{color:"black",amount:3}]},{color:"black",pointValue:1,tier:2,costs:[{color:"white",amount:3},{color:"blue",amount:2},{color:"green",amount:2}]},{color:"green",pointValue:1,tier:2,costs:[{color:"white",amount:3},{color:"red",amount:3},{color:"green",amount:2}]},{color:"white",pointValue:1,tier:2,costs:[{color:"white",amount:2},{color:"red",amount:3},{color:"blue",amount:3}]},{color:"red",pointValue:1,tier:2,costs:[{color:"black",amount:3},{color:"red",amount:2},{color:"blue",amount:3}]},{color:"blue",pointValue:1,tier:2,costs:[{color:"black",amount:3},{color:"green",amount:3},{color:"blue",amount:2}]},{color:"black",pointValue:1,tier:2,costs:[{color:"black",amount:2},{color:"green",amount:3},{color:"white",amount:3}]}],U=[{color:"white",pointValue:3,tier:3,costs:[{color:"blue",amount:3},{color:"green",amount:3},{color:"red",amount:5},{color:"black",amount:3}]},{color:"blue",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"green",amount:3},{color:"red",amount:3},{color:"black",amount:5}]},{color:"green",pointValue:3,tier:3,costs:[{color:"white",amount:5},{color:"blue",amount:3},{color:"red",amount:3},{color:"black",amount:3}]},{color:"red",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]},{color:"black",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"blue",amount:3},{color:"green",amount:5},{color:"red",amount:3}]},{color:"white",pointValue:4,tier:3,costs:[{color:"black",amount:7}]},{color:"black",pointValue:4,tier:3,costs:[{color:"red",amount:7}]},{color:"blue",pointValue:4,tier:3,costs:[{color:"white",amount:7}]},{color:"red",pointValue:4,tier:3,costs:[{color:"green",amount:7}]},{color:"green",pointValue:4,tier:3,costs:[{color:"blue",amount:7}]},{color:"red",pointValue:4,tier:3,costs:[{color:"blue",amount:3},{color:"green",amount:6},{color:"red",amount:3}]},{color:"black",pointValue:4,tier:3,costs:[{color:"green",amount:3},{color:"red",amount:6},{color:"black",amount:3}]},{color:"white",pointValue:4,tier:3,costs:[{color:"white",amount:3},{color:"red",amount:3},{color:"black",amount:6}]},{color:"blue",pointValue:4,tier:3,costs:[{color:"white",amount:6},{color:"blue",amount:3},{color:"black",amount:3}]},{color:"green",pointValue:4,tier:3,costs:[{color:"white",amount:3},{color:"blue",amount:6},{color:"green",amount:3}]},{color:"white",pointValue:5,tier:3,costs:[{color:"white",amount:3},{color:"black",amount:7}]},{color:"blue",pointValue:5,tier:3,costs:[{color:"white",amount:7},{color:"blue",amount:3}]},{color:"green",pointValue:5,tier:3,costs:[{color:"green",amount:3},{color:"blue",amount:7}]},{color:"red",pointValue:5,tier:3,costs:[{color:"green",amount:7},{color:"red",amount:3}]},{color:"black",pointValue:5,tier:3,costs:[{color:"black",amount:3},{color:"red",amount:7}]}],W=(P=function(){function e(t){Object(h.a)(this,e),Object(f.a)(this,"currentRound",N,this),Object(f.a)(this,"currentPlayerIndex",R,this),this.players=[],Object(f.a)(this,"winningPlayers",S,this),Object(f.a)(this,"chipStacks",z,this),Object(f.a)(this,"cardStacks",T,this),Object(f.a)(this,"nobles",q,this),Object(f.a)(this,"singleChipHandler",H,this),Object(f.a)(this,"doubleChipHandler",F,this),Object(f.a)(this,"purchaseHandler",I,this),Object(f.a)(this,"returnChipHandler",D,this),Object(f.a)(this,"reserveHandler",M,this),this.initializePlayers(t),this.initializeChips(4===t?7:t+2),this.initializeCards(),this.initializeNobles(t+1)}return Object(b.a)(e,[{key:"initializePlayers",value:function(e){var t,o,r=this;t=e,o=function(e){r.players.push(new w(e+1,"player"))},Object(E.a)(Array(t)).forEach((function(e,t){o(t)}))}},{key:"initializeChips",value:function(e){var t=this;V.forEach((function(o){t.chipStacks.set(o,e)})),this.chipStacks.set("wild",5)}},{key:"initializeCards",value:function(){this.cardStacks.set(1,j(L)),this.cardStacks.set(2,j(Q)),this.cardStacks.set(3,j(U))}},{key:"initializeNobles",value:function(e){this.nobles=j(O).splice(0,e)}},{key:"playerCanPurchase",value:function(e){return!this.currentPlayer.hasTempChips&&this.currentPlayer.canBuyCard(e)}},{key:"nobleCheck",value:function(){var e=this;if(this.nobles.filter((function(t){return e.currentPlayer.fulfillsRequirementsForNoble(t)})).length>0){var t=this.nobles.splice(0,1)[0];this.currentPlayer.nobles.push(t)}}},{key:"removeChips",value:function(e,t){var o=(this.chipStacks.get(e)||0)-t;this.chipStacks.set(e,o<0?0:o)}},{key:"addChips",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=this.chipStacks.get(e)||0;this.chipStacks.set(e,o+t)}},{key:"chipColorForId",value:function(e){return e.split("-")[0]}},{key:"endPlayerTurn",value:function(){this.nobleCheck(),this.currentPlayerIndex++,this.currentPlayerIndex>=this.players.length&&this.handleEndOfRoundStuff()}},{key:"handleEndOfRoundStuff",value:function(){var e=this.players.filter((function(e){return e.totalPoints>=15}));if(0===e.length)this.finishRound();else if(1===e.length)console.log("1 clear winner"),this.endGame(e);else{console.log("multiple possile winners: ",e);var t=e.sort((function(e,t){return t.totalPoints-e.totalPoints}))[0].totalPoints;console.log("highest score: ",t);var o=e.filter((function(e){return e.totalPoints===t}));if(console.log("all the higest scoreres:",o),1===o.length)console.log("1 winningest winner"),this.endGame(o);else{var r=o.sort((function(e,t){return e.tableau.length-t.tableau.length}))[0].tableau.length;console.log("lowest card count: ",r);var n=o.filter((function(e){return e.tableau.length===r}));console.log("players with lowest card count: ",n),this.endGame(n)}}}},{key:"finishRound",value:function(){console.log("finishing round"),this.currentRound++,this.currentPlayerIndex=0}},{key:"endGame",value:function(e){console.log("game has ended, winners: ",e),this.winningPlayers=e}},{key:"runCardTests",value:function(){this.runTestsForCards(U,"3")}},{key:"runTestsForCards",value:function(e,t){console.log("\n\nbeginning test for tier : ",t),console.log("here are my cards: ",e);var o=e.map((function(e){return e.pointValue}));console.log("these are the totalPointsValues: ",o);var r=o.reduce((function(e,t){return e+t}));console.log("these are the totalPointsValuesReduced",r),console.log("cards of color:"),V.forEach((function(o){console.log("now checking for: ",o);var r=e.filter((function(e){return e.color===o})),n=e.map((function(e){return e.costs}));console.log("map: ",n);var a=n.flat();console.log("flat",a);var l=a.filter((function(e){return e.color===o}));console.log("filter",l);var c=l.map((function(e){return e.amount}));console.log("map",c);var i=c.reduce((function(e,t){return e+t}));console.log("reduced",i),console.log("".concat(r.length," cards for ").concat(o)),console.log("tier ".concat(t," costs for ").concat(o,": ").concat(i))}))}},{key:"currentPlayer",get:function(){return this.players[this.currentPlayerIndex]}},{key:"sortedPlayers",get:function(){return this.players.sort((function(e,t){return t.totalPoints-e.totalPoints}))}},{key:"playerCanReserve",get:function(){return!this.currentPlayer.hasTempChips&&this.currentPlayer.canReserveCard}}]),e}(),N=Object(v.a)(P.prototype,"currentRound",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),R=Object(v.a)(P.prototype,"currentPlayerIndex",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),S=Object(v.a)(P.prototype,"winningPlayers",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),z=Object(v.a)(P.prototype,"chipStacks",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),T=Object(v.a)(P.prototype,"cardStacks",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),q=Object(v.a)(P.prototype,"nobles",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Object(v.a)(P.prototype,"currentPlayer",[y.computed],Object.getOwnPropertyDescriptor(P.prototype,"currentPlayer"),P.prototype),Object(v.a)(P.prototype,"sortedPlayers",[y.computed],Object.getOwnPropertyDescriptor(P.prototype,"sortedPlayers"),P.prototype),Object(v.a)(P.prototype,"playerCanReserve",[y.computed],Object.getOwnPropertyDescriptor(P.prototype,"playerCanReserve"),P.prototype),H=Object(v.a)(P.prototype,"singleChipHandler",[y.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=e.chipColorForId(t);e.removeChips(o,1),e.currentPlayer.addChip(o,1,!0),e.currentPlayer.tempChipCount>=3&&(e.currentPlayer.saveTempChips(),e.endPlayerTurn())}}}),F=Object(v.a)(P.prototype,"doubleChipHandler",[y.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=e.chipColorForId(t);e.removeChips(o,2),e.currentPlayer.addChip(o,2),e.endPlayerTurn()}}}),I=Object(v.a)(P.prototype,"purchaseHandler",[y.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=t.split("-"),r=Number(o[0]),n=Number(o[1]),a=e.cardStacks.get(r);if(a){var l=a.splice(n,1)[0],c=0;l.costs.forEach((function(t){var o=e.currentPlayer.costReductionFor(t.color),r=t.amount-o,n=e.currentPlayer.chips.get(t.color)||0;r>n&&(c+=r-n);var a=r>=0?r:0;e.currentPlayer.removeChip(t.color,a),e.addChips(t.color,a)})),c&&(e.currentPlayer.removeChip("wild",c),e.addChips("wild",c)),e.currentPlayer.tableau.push(l),e.endPlayerTurn()}else e.endPlayerTurn()}}}),D=Object(v.a)(P.prototype,"returnChipHandler",[y.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=e.chipColorForId(t);e.currentPlayer.removeChip(o,1,!0),e.addChips(o,1)}}}),M=Object(v.a)(P.prototype,"reserveHandler",[y.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=t.split("-"),r=Number(o[0]),n=Number(o[1]),a=e.cardStacks.get(r);if(a){var l=a.splice(n,1)[0];e.currentPlayer.reserveCards.push(l);var c=e.chipStacks.get("wild");c&&c>0&&(e.chipStacks.set("wild",c-1),e.currentPlayer.addChip("wild")),e.endPlayerTurn()}}}}),P),X={gameStore:new(x=function(){function e(){Object(h.a)(this,e),Object(f.a)(this,"game",A,this)}return Object(b.a)(e,[{key:"reset",value:function(){this.game=new W(4)}}]),e}(),A=Object(v.a)(x.prototype,"game",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new W(4)}}),x)},Y=o(7),Z=o(11),$=(o(24),Object(Y.a)((G=function(e){Object(d.a)(o,e);var t=Object(g.a)(o);function o(){var e;Object(h.a)(this,o);for(var r=arguments.length,n=new Array(r),a=0;a<r;a++)n[a]=arguments[a];return e=t.call.apply(t,[this].concat(n)),Object(f.a)(e,"tempName",J,Object(Z.a)(e)),e.handleChange=function(t){e.tempName=t.target.value},e.handleSubmit=function(t){e.props.player.name=e.tempName,t.preventDefault()},e.handleBlur=function(t){e.props.player.name=e.tempName},e}return Object(b.a)(o,[{key:"render",value:function(){var e=this.props.player,t=X.gameStore.game.currentPlayer===this.props.player?"active":"inactive";return s.a.createElement("div",{className:"PlayerComponent"},s.a.createElement("div",{className:t},s.a.createElement("div",null,"player ",e.name),s.a.createElement("div",null,"id ",e.id),s.a.createElement("div",null,"points ",e.totalPoints),s.a.createElement("div",{className:"chips-container"},s.a.createElement("div",{className:"background"},"player chips"),s.a.createElement("div",{className:"player-chips"},Array.from(e.chips).filter((function(e){return e[1]>0})).map((function(e){var t=e[0],o=e[1];return s.a.createElement("div",{className:"chip ".concat(t),key:Math.random()},o)})))),s.a.createElement("div",{className:"cards-container"},s.a.createElement("div",{className:"background"},"player tableau"),s.a.createElement("div",{className:"player-cards"},e.tableau.map((function(e){return s.a.createElement("div",{className:"card ".concat(e.color),key:Math.random()},e.pointValue)})))),s.a.createElement("div",{className:"nobles-container"},s.a.createElement("div",{className:"player-nobles"},e.nobles.map((function(e){return s.a.createElement("div",{className:"noble",key:Math.random()},e.pointValue)}))),s.a.createElement("form",{onSubmit:this.handleSubmit},s.a.createElement("label",null,"change name:",s.a.createElement("input",{type:"text",value:this.tempName,onChange:this.handleChange,onBlur:this.handleBlur}))))))}}]),o}(s.a.Component),J=Object(v.a)(G.prototype,"tempName",[y.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),B=G))||B),_=(o(25),function(e){return s.a.createElement("div",{className:"NobleComponent"},s.a.createElement("div",{className:"point-value"},e.noble.pointValue),e.noble.cardRequirements.map((function(e){return s.a.createElement("div",{className:"requirement "+e.color,key:"".concat(e.color).concat(e.amount)},e.amount)})))}),ee=(o(26),Object(Y.a)((function(e){var t=X.gameStore.game,o=t.cardStacks.get(e.cardCostTier);if(!o)return s.a.createElement("div",null);var r=o.length-4,n=r>0?r:0,a=o.slice(0,4);return s.a.createElement("div",{className:"CardStackComponent"},s.a.createElement("div",{className:"card remaining"},n," cards remaining"),a.map((function(o,r){var n=t.playerCanPurchase(o),a="".concat(e.cardCostTier,"-").concat(r);return s.a.createElement("div",{className:"card",key:a},s.a.createElement("div",{className:"point-value"},o.pointValue>0?o.pointValue:"\xa0"),s.a.createElement("div",{className:"indicator"},s.a.createElement("div",{className:"color-indicator "+o.color}," ")),s.a.createElement("div",{className:"costs"},o.costs.map((function(e){var t="cost ".concat(e.color);return s.a.createElement("div",{className:t,key:t},e.amount)}))),s.a.createElement("div",{className:"actions"},s.a.createElement("button",{id:a,onClick:function(e){return t.reserveHandler(e.currentTarget.id)},disabled:!t.playerCanReserve},"hold"),s.a.createElement("button",{id:a,onClick:function(e){return t.purchaseHandler(e.currentTarget.id)},disabled:!n},"buy")))})))}))),te=(o(27),Object(Y.a)((function(){var e=X.gameStore.game,t=e.currentPlayer,o=Array.from(e.chipStacks.keys());return s.a.createElement("div",{className:"ChipStackComponent"},s.a.createElement("div",{className:"temp-chips"},"temp chips:",s.a.createElement("br",null),t.tempChips.map((function(t){return s.a.createElement("div",{key:t},s.a.createElement("div",{className:"chip-stack ".concat(t)},"1"),s.a.createElement("button",{id:"".concat(t,"-temp-chip"),onClick:function(t){return e.returnChipHandler(t.currentTarget.id)}},"return"))}))),o.map((function(o){var r,n=e.chipStacks.get(o)||0,a=(null===(r=t.tempChips.find((function(e){return e===o})))||void 0===r?void 0:r.length)?1:0,l=n&&0===a,c=n>=4&&!t.tempChipCount;return s.a.createElement("div",{key:o},s.a.createElement("div",{className:"chip-stack ".concat(o)},n),"wild"!==o&&s.a.createElement(s.a.Fragment,null,s.a.createElement("button",{id:"".concat(o,"-1"),disabled:!l,onClick:function(t){return e.singleChipHandler(t.currentTarget.id)}},"grab 1"),s.a.createElement("button",{id:"".concat(o,"-2"),disabled:!c,onClick:function(t){return e.doubleChipHandler(t.currentTarget.id)}},"grab 2")))})))}))),oe=Object(Y.a)(K=function(e){Object(d.a)(o,e);var t=Object(g.a)(o);function o(){return Object(h.a)(this,o),t.apply(this,arguments)}return Object(b.a)(o,[{key:"render",value:function(){var e=X.gameStore.game;return s.a.createElement("div",{className:"GameComponent"},s.a.createElement("div",null,"round #",e.currentRound,", players:",e.players.map((function(e){return s.a.createElement($,{player:e,key:e.id})}))),s.a.createElement("div",null,"chips:",s.a.createElement(te,null)),s.a.createElement("div",null,s.a.createElement("div",null,"cards:",s.a.createElement(ee,{cardCostTier:1}),s.a.createElement(ee,{cardCostTier:2}),s.a.createElement(ee,{cardCostTier:3})),s.a.createElement("div",{className:"nobles-container"},"nobles:",e.nobles.map((function(e){return s.a.createElement(_,{noble:e,key:C(e)})})))))}}]),o}(s.a.Component))||K,re=(o(28),function(e){Object(d.a)(o,e);var t=Object(g.a)(o);function o(){return Object(h.a)(this,o),t.apply(this,arguments)}return Object(b.a)(o,[{key:"render",value:function(){if(!this.props.game.winningPlayers)return s.a.createElement(s.a.Fragment,null);var e=this.props.game.winningPlayers[0].totalPoints,t="with ".concat(e," points"),o=1===this.props.game.winningPlayers.length?"the winner, ".concat(t,", is:"):"the winners, ".concat(t,", are:");return s.a.createElement("div",{className:"ResultsComponent"},s.a.createElement("div",{className:"announce"},o),this.props.game.winningPlayers.map((function(e){return s.a.createElement("div",{className:"winner",key:Math.random()},e.name)})),s.a.createElement("hr",null),s.a.createElement("div",null,"all players, final scores:",s.a.createElement("table",null,s.a.createElement("tbody",null,this.props.game.sortedPlayers.map((function(e){return s.a.createElement("tr",{key:Math.random()},s.a.createElement("td",null,"player Name: ",e.name),s.a.createElement("td",null,"player score: ",e.totalPoints),s.a.createElement("td",null,"development cards: ",e.tableau.length))})))),s.a.createElement("button",{onClick:function(){return X.gameStore.reset()}},"reset game")))}}]),o}(s.a.Component));var ne=function(){return s.a.createElement("div",{className:"App"},s.a.createElement("div",null,"it not splendor"),s.a.createElement(ae,null))},ae=Object(Y.a)((function(){var e=X.gameStore.game;return e.winningPlayers?s.a.createElement(re,{game:e}):s.a.createElement(oe,null)}));o(29),o(32);p.a.render(s.a.createElement(s.a.StrictMode,null,s.a.createElement(ne,null)),document.getElementById("root"))}],[[16,1,2]]]);
//# sourceMappingURL=main.d1985002.chunk.js.map