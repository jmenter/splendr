(this.webpackJsonpsplendr=this.webpackJsonpsplendr||[]).push([[0],[,,,,,,,,,,,,,,,,function(e,t,o){e.exports=o(34)},,,,,function(e,t,o){},function(e,t,o){},,function(e,t,o){},function(e,t,o){},function(e,t,o){},function(e,t,o){},function(e,t,o){},function(e,t,o){},,,,function(e,t,o){},function(e,t,o){"use strict";o.r(t);var r,a,n,l,c,i,u,s=o(0),m=o.n(s),p=o(13),h=o.n(p),d=(o(21),o(5)),b=o(6),g=o(9),f=o(8),v=(o(22),o(3)),y=o(2),k=(o(10),o(1)),w=(r=function(){function e(t,o){Object(d.a)(this,e),this.id=void 0,Object(v.a)(this,"name",a,this),Object(v.a)(this,"chips",n,this),Object(v.a)(this,"tempChips",l,this),Object(v.a)(this,"nobles",c,this),Object(v.a)(this,"tableau",i,this),Object(v.a)(this,"reserveCards",u,this),this.id=t,this.name=o}return Object(b.a)(e,[{key:"costReductionFor",value:function(e){return this.tableau.filter((function(t){return t.color===e})).length}},{key:"buyingPowerForColor",value:function(e){return(this.chips.get(e)||0)+this.tableau.filter((function(t){return t.color===e})).length}},{key:"canBuyCard",value:function(e){var t=this,o=0;e.costs.forEach((function(e){var r=t.buyingPowerForColor(e.color);e.amount>r&&(o+=e.amount-r)}));var r=this.chips.get("wild")||0;return o-r<=0}},{key:"fulfillsRequirementsForNoble",value:function(e){var t=this;return 0===e.cardRequirements.filter((function(e){return!t.meetsNobleRequirement(e)})).length}},{key:"meetsNobleRequirement",value:function(e){return this.tableau.filter((function(t){return t.color===e.color})).length>=e.amount}},{key:"saveTempChips",value:function(){var e=this;this.tempChips.forEach((function(t){var o=e.chips.get(t)||0;e.chips.set(t,o+1)})),this.tempChips=[]}},{key:"addChip",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(o)this.tempChips.push(e);else{var r=this.chips.get(e)||0;this.chips.set(e,r+t)}}},{key:"removeChip",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(o){var r=this.tempChips.indexOf(e);this.tempChips.splice(r,1)}var a=this.chips.get(e);a&&(console.log("removing chip",e,a,t),a>=t?this.chips.set(e,a-t):this.chips.set(e,0))}},{key:"getChipCount",value:function(){var e=arguments.length>0&&void 0!==arguments[0]&&arguments[0];if(e)return this.tempChips.length;var t=Array.from(this.chips.values());return t.length?t.reduce((function(e,t){return e+t})):0}},{key:"canReserveCard",get:function(){return this.reserveCards.length<3}},{key:"totalPoints",get:function(){var e=0;this.tableau.forEach((function(t){return e+=t.pointValue}));var t=0;return this.nobles.forEach((function(e){return t+=e.pointValue})),e+t}},{key:"chipCount",get:function(){return this.getChipCount()}},{key:"tempChipCount",get:function(){return this.getChipCount(!0)}},{key:"hasTempChips",get:function(){return this.tempChipCount>0}}]),e}(),a=Object(y.a)(r.prototype,"name",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),n=Object(y.a)(r.prototype,"chips",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),l=Object(y.a)(r.prototype,"tempChips",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),c=Object(y.a)(r.prototype,"nobles",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),i=Object(y.a)(r.prototype,"tableau",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),u=Object(y.a)(r.prototype,"reserveCards",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),Object(y.a)(r.prototype,"canReserveCard",[k.computed],Object.getOwnPropertyDescriptor(r.prototype,"canReserveCard"),r.prototype),Object(y.a)(r.prototype,"totalPoints",[k.computed],Object.getOwnPropertyDescriptor(r.prototype,"totalPoints"),r.prototype),Object(y.a)(r.prototype,"chipCount",[k.computed],Object.getOwnPropertyDescriptor(r.prototype,"chipCount"),r.prototype),Object(y.a)(r.prototype,"tempChipCount",[k.computed],Object.getOwnPropertyDescriptor(r.prototype,"tempChipCount"),r.prototype),Object(y.a)(r.prototype,"hasTempChips",[k.computed],Object.getOwnPropertyDescriptor(r.prototype,"hasTempChips"),r.prototype),Object(y.a)(r.prototype,"removeChip",[k.action],Object.getOwnPropertyDescriptor(r.prototype,"removeChip"),r.prototype),r),C=["white","blue","green","red","black"];function V(e){return JSON.stringify(e.cardRequirements)}var O=[{pointValue:3,cardRequirements:[{color:"blue",amount:4},{color:"white",amount:4}]},{pointValue:3,cardRequirements:[{color:"blue",amount:4},{color:"green",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:4},{color:"red",amount:4}]},{pointValue:3,cardRequirements:[{color:"red",amount:4},{color:"green",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:4},{color:"white",amount:4}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"blue",amount:3},{color:"white",amount:3}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"red",amount:3},{color:"white",amount:3}]},{pointValue:3,cardRequirements:[{color:"black",amount:3},{color:"red",amount:3},{color:"green",amount:3}]},{pointValue:3,cardRequirements:[{color:"green",amount:3},{color:"blue",amount:3},{color:"red",amount:3}]},{pointValue:3,cardRequirements:[{color:"green",amount:3},{color:"blue",amount:3},{color:"white",amount:3}]}],P=o(15);function E(e){return e.map((function(e){return{sort:Math.random(),value:e}})).sort((function(e,t){return e.sort-t.sort})).map((function(e){return e.value}))}var j,N,S,R,T,z,H,D,q,F,I,M,x,A,B,G,J,K,L,Q,U,W=[{color:"white",pointValue:1,tier:1,costs:[{color:"green",amount:4}]},{color:"blue",pointValue:1,tier:1,costs:[{color:"red",amount:4}]},{color:"green",pointValue:1,tier:1,costs:[{color:"black",amount:4}]},{color:"red",pointValue:1,tier:1,costs:[{color:"white",amount:4}]},{color:"black",pointValue:1,tier:1,costs:[{color:"blue",amount:4}]},{color:"white",pointValue:0,tier:1,costs:[{color:"red",amount:2},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"black",amount:2}]},{color:"green",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"blue",amount:1}]},{color:"red",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"green",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"green",amount:2},{color:"red",amount:1}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:3}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"black",amount:3}]},{color:"green",pointValue:0,tier:1,costs:[{color:"red",amount:3}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:3}]},{color:"black",pointValue:0,tier:1,costs:[{color:"green",amount:3}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:1},{color:"green",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"green",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"green",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"red",amount:1},{color:"black",amount:1}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"green",amount:1},{color:"black",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"white",amount:1},{color:"blue",amount:1},{color:"green",amount:1},{color:"red",amount:1}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"black",amount:2}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"green",amount:2},{color:"black",amount:2}]},{color:"green",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"red",amount:2}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"red",amount:2}]},{color:"black",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"green",amount:2}]},{color:"white",pointValue:0,tier:1,costs:[{color:"white",amount:3},{color:"blue",amount:1},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"green",amount:3},{color:"blue",amount:1},{color:"red",amount:1}]},{color:"green",pointValue:0,tier:1,costs:[{color:"green",amount:1},{color:"blue",amount:3},{color:"white",amount:1}]},{color:"red",pointValue:0,tier:1,costs:[{color:"red",amount:1},{color:"black",amount:3},{color:"white",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"red",amount:3},{color:"black",amount:1},{color:"green",amount:1}]},{color:"white",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"black",amount:1},{color:"green",amount:2}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"red",amount:2},{color:"white",amount:1},{color:"green",amount:2}]},{color:"green",pointValue:0,tier:1,costs:[{color:"red",amount:2},{color:"blue",amount:1},{color:"black",amount:2}]},{color:"red",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"green",amount:1},{color:"black",amount:2}]},{color:"black",pointValue:0,tier:1,costs:[{color:"white",amount:2},{color:"red",amount:1},{color:"blue",amount:2}]},{color:"white",pointValue:0,tier:1,costs:[{color:"green",amount:2},{color:"red",amount:1},{color:"blue",amount:1},{color:"black",amount:1}]},{color:"blue",pointValue:0,tier:1,costs:[{color:"green",amount:1},{color:"red",amount:2},{color:"white",amount:1},{color:"black",amount:1}]},{color:"green",pointValue:0,tier:1,costs:[{color:"blue",amount:1},{color:"red",amount:1},{color:"white",amount:1},{color:"black",amount:2}]},{color:"red",pointValue:0,tier:1,costs:[{color:"blue",amount:1},{color:"green",amount:1},{color:"white",amount:2},{color:"black",amount:1}]},{color:"black",pointValue:0,tier:1,costs:[{color:"blue",amount:2},{color:"green",amount:1},{color:"white",amount:1},{color:"red",amount:1}]}],X=[{color:"white",pointValue:3,tier:2,costs:[{color:"white",amount:6}]},{color:"blue",pointValue:3,tier:2,costs:[{color:"blue",amount:6}]},{color:"green",pointValue:3,tier:2,costs:[{color:"green",amount:6}]},{color:"red",pointValue:3,tier:2,costs:[{color:"red",amount:6}]},{color:"black",pointValue:3,tier:2,costs:[{color:"black",amount:6}]},{color:"black",pointValue:2,tier:2,costs:[{color:"green",amount:4},{color:"blue",amount:1},{color:"red",amount:2}]},{color:"white",pointValue:2,tier:2,costs:[{color:"red",amount:4},{color:"green",amount:1},{color:"black",amount:2}]},{color:"blue",pointValue:2,tier:2,costs:[{color:"black",amount:4},{color:"white",amount:2},{color:"red",amount:1}]},{color:"green",pointValue:2,tier:2,costs:[{color:"white",amount:4},{color:"blue",amount:2},{color:"black",amount:1}]},{color:"red",pointValue:2,tier:2,costs:[{color:"blue",amount:4},{color:"white",amount:1},{color:"green",amount:2}]},{color:"black",pointValue:2,tier:2,costs:[{color:"white",amount:5}]},{color:"white",pointValue:2,tier:2,costs:[{color:"red",amount:5}]},{color:"blue",pointValue:2,tier:2,costs:[{color:"blue",amount:5}]},{color:"green",pointValue:2,tier:2,costs:[{color:"green",amount:5}]},{color:"red",pointValue:2,tier:2,costs:[{color:"black",amount:5}]},{color:"red",pointValue:2,tier:2,costs:[{color:"black",amount:5},{color:"white",amount:3}]},{color:"white",pointValue:2,tier:2,costs:[{color:"black",amount:3},{color:"red",amount:5}]},{color:"black",pointValue:2,tier:2,costs:[{color:"green",amount:5},{color:"red",amount:3}]},{color:"green",pointValue:2,tier:2,costs:[{color:"blue",amount:5},{color:"green",amount:3}]},{color:"blue",pointValue:2,tier:2,costs:[{color:"white",amount:5},{color:"blue",amount:3}]},{color:"white",pointValue:1,tier:2,costs:[{color:"red",amount:2},{color:"black",amount:2},{color:"green",amount:3}]},{color:"blue",pointValue:1,tier:2,costs:[{color:"red",amount:3},{color:"blue",amount:2},{color:"green",amount:2}]},{color:"green",pointValue:1,tier:2,costs:[{color:"white",amount:2},{color:"blue",amount:3},{color:"black",amount:2}]},{color:"red",pointValue:1,tier:2,costs:[{color:"white",amount:2},{color:"red",amount:2},{color:"black",amount:3}]},{color:"black",pointValue:1,tier:2,costs:[{color:"white",amount:3},{color:"blue",amount:2},{color:"green",amount:2}]},{color:"green",pointValue:1,tier:2,costs:[{color:"white",amount:3},{color:"red",amount:3},{color:"green",amount:2}]},{color:"white",pointValue:1,tier:2,costs:[{color:"white",amount:2},{color:"red",amount:3},{color:"blue",amount:3}]},{color:"red",pointValue:1,tier:2,costs:[{color:"black",amount:3},{color:"red",amount:2},{color:"blue",amount:3}]},{color:"blue",pointValue:1,tier:2,costs:[{color:"black",amount:3},{color:"green",amount:3},{color:"blue",amount:2}]},{color:"black",pointValue:1,tier:2,costs:[{color:"black",amount:2},{color:"green",amount:3},{color:"white",amount:3}]}],Y=[{color:"white",pointValue:3,tier:3,costs:[{color:"blue",amount:3},{color:"green",amount:3},{color:"red",amount:5},{color:"black",amount:3}]},{color:"blue",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"green",amount:3},{color:"red",amount:3},{color:"black",amount:5}]},{color:"green",pointValue:3,tier:3,costs:[{color:"white",amount:5},{color:"blue",amount:3},{color:"red",amount:3},{color:"black",amount:3}]},{color:"red",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"blue",amount:5},{color:"green",amount:3},{color:"black",amount:3}]},{color:"black",pointValue:3,tier:3,costs:[{color:"white",amount:3},{color:"blue",amount:3},{color:"green",amount:5},{color:"red",amount:3}]},{color:"white",pointValue:4,tier:3,costs:[{color:"black",amount:7}]},{color:"black",pointValue:4,tier:3,costs:[{color:"red",amount:7}]},{color:"blue",pointValue:4,tier:3,costs:[{color:"white",amount:7}]},{color:"red",pointValue:4,tier:3,costs:[{color:"green",amount:7}]},{color:"green",pointValue:4,tier:3,costs:[{color:"blue",amount:7}]},{color:"red",pointValue:4,tier:3,costs:[{color:"blue",amount:3},{color:"green",amount:6},{color:"red",amount:3}]},{color:"black",pointValue:4,tier:3,costs:[{color:"green",amount:3},{color:"red",amount:6},{color:"black",amount:3}]},{color:"white",pointValue:4,tier:3,costs:[{color:"white",amount:3},{color:"red",amount:3},{color:"black",amount:6}]},{color:"blue",pointValue:4,tier:3,costs:[{color:"white",amount:6},{color:"blue",amount:3},{color:"black",amount:3}]},{color:"green",pointValue:4,tier:3,costs:[{color:"white",amount:3},{color:"blue",amount:6},{color:"green",amount:3}]},{color:"white",pointValue:5,tier:3,costs:[{color:"white",amount:3},{color:"black",amount:7}]},{color:"blue",pointValue:5,tier:3,costs:[{color:"white",amount:7},{color:"blue",amount:3}]},{color:"green",pointValue:5,tier:3,costs:[{color:"green",amount:3},{color:"blue",amount:7}]},{color:"red",pointValue:5,tier:3,costs:[{color:"green",amount:7},{color:"red",amount:3}]},{color:"black",pointValue:5,tier:3,costs:[{color:"black",amount:3},{color:"red",amount:7}]}],Z=(j=function(){function e(t){Object(d.a)(this,e),Object(v.a)(this,"currentRound",N,this),Object(v.a)(this,"currentPlayerIndex",S,this),this.players=[],Object(v.a)(this,"winningPlayers",R,this),Object(v.a)(this,"chipStacks",T,this),Object(v.a)(this,"cardStacks",z,this),Object(v.a)(this,"nobles",H,this),Object(v.a)(this,"playerShouldDiscard",D,this),Object(v.a)(this,"discardChipHandler",q,this),Object(v.a)(this,"singleChipHandler",F,this),Object(v.a)(this,"doubleChipHandler",I,this),Object(v.a)(this,"tablePurchaseHandler",M,this),Object(v.a)(this,"reservePurchaseHandler",x,this),Object(v.a)(this,"returnChipHandler",A,this),Object(v.a)(this,"reserveHandler",B,this),this.initializePlayers(t),this.initializeChips(4===t?7:t+2),this.initializeCards(),this.initializeNobles(t+1)}return Object(b.a)(e,[{key:"initializePlayers",value:function(e){var t,o,r=this;t=e,o=function(e){r.players.push(new w(e+1,"player"))},Object(P.a)(Array(t)).forEach((function(e,t){o(t)}))}},{key:"initializeChips",value:function(e){var t=this;C.forEach((function(o){t.chipStacks.set(o,e)})),this.chipStacks.set("wild",5)}},{key:"initializeCards",value:function(){this.cardStacks.set(1,E(W)),this.cardStacks.set(2,E(X)),this.cardStacks.set(3,E(Y))}},{key:"initializeNobles",value:function(e){this.nobles=E(O).splice(0,e)}},{key:"playerCanPurchase",value:function(e){return!this.currentPlayer.hasTempChips&&this.currentPlayer.canBuyCard(e)&&!this.playerShouldDiscard}},{key:"handleCardPurchaseTransaction",value:function(e){var t=this,o=0;e.costs.forEach((function(e){var r=t.currentPlayer.costReductionFor(e.color),a=e.amount-r,n=t.currentPlayer.chips.get(e.color)||0,l=0;a>n&&(o+=l=a-n);var c=a-l;t.currentPlayer.removeChip(e.color,c),t.addChips(e.color,c)})),o&&(this.currentPlayer.removeChip("wild",o),this.addChips("wild",o)),this.currentPlayer.tableau.push(e),this.endPlayerTurn()}},{key:"nobleCheck",value:function(){var e=this;if(this.nobles.filter((function(t){return e.currentPlayer.fulfillsRequirementsForNoble(t)})).length>0){var t=this.nobles.splice(0,1)[0];this.currentPlayer.nobles.push(t)}}},{key:"removeChips",value:function(e,t){var o=(this.chipStacks.get(e)||0)-t;this.chipStacks.set(e,o<0?0:o)}},{key:"addChips",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,o=this.chipStacks.get(e)||0;this.chipStacks.set(e,o+t)}},{key:"chipColorForId",value:function(e){return e.split("-")[0]}},{key:"endPlayerTurn",value:function(){this.playerShouldDiscard=this.currentPlayer.chipCount>10,this.playerShouldDiscard||(this.nobleCheck(),this.currentPlayerIndex++,this.currentPlayerIndex>=this.players.length&&this.handleEndOfRoundStuff())}},{key:"handleEndOfRoundStuff",value:function(){var e=this.players.filter((function(e){return e.totalPoints>=15}));if(0===e.length)this.finishRound();else if(1===e.length)console.log("1 clear winner"),this.endGame(e);else{console.log("multiple possile winners: ",e);var t=e.sort((function(e,t){return t.totalPoints-e.totalPoints}))[0].totalPoints;console.log("highest score: ",t);var o=e.filter((function(e){return e.totalPoints===t}));if(console.log("all the higest scoreres:",o),1===o.length)console.log("1 winningest winner"),this.endGame(o);else{var r=o.sort((function(e,t){return e.tableau.length-t.tableau.length}))[0].tableau.length;console.log("lowest card count: ",r);var a=o.filter((function(e){return e.tableau.length===r}));console.log("players with lowest card count: ",a),this.endGame(a)}}}},{key:"finishRound",value:function(){console.log("finishing round"),this.currentRound++,this.currentPlayerIndex=0}},{key:"endGame",value:function(e){console.log("game has ended, winners: ",e),this.winningPlayers=e}},{key:"runCardTests",value:function(){this.runTestsForCards(Y,"3")}},{key:"runTestsForCards",value:function(e,t){console.log("\n\nbeginning test for tier : ",t),console.log("here are my cards: ",e);var o=e.map((function(e){return e.pointValue}));console.log("these are the totalPointsValues: ",o);var r=o.reduce((function(e,t){return e+t}));console.log("these are the totalPointsValuesReduced",r),console.log("cards of color:"),C.forEach((function(o){console.log("now checking for: ",o);var r=e.filter((function(e){return e.color===o})),a=e.map((function(e){return e.costs}));console.log("map: ",a);var n=a.flat();console.log("flat",n);var l=n.filter((function(e){return e.color===o}));console.log("filter",l);var c=l.map((function(e){return e.amount}));console.log("map",c);var i=c.reduce((function(e,t){return e+t}));console.log("reduced",i),console.log("".concat(r.length," cards for ").concat(o)),console.log("tier ".concat(t," costs for ").concat(o,": ").concat(i))}))}},{key:"currentPlayer",get:function(){return this.players[this.currentPlayerIndex]}},{key:"sortedPlayers",get:function(){return this.players.sort((function(e,t){return t.totalPoints-e.totalPoints}))}},{key:"playerCanReserve",get:function(){return!this.currentPlayer.hasTempChips&&this.currentPlayer.canReserveCard&&!this.playerShouldDiscard}}]),e}(),N=Object(y.a)(j.prototype,"currentRound",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 1}}),S=Object(y.a)(j.prototype,"currentPlayerIndex",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return 0}}),R=Object(y.a)(j.prototype,"winningPlayers",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),T=Object(y.a)(j.prototype,"chipStacks",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),z=Object(y.a)(j.prototype,"cardStacks",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Map}}),H=Object(y.a)(j.prototype,"nobles",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return[]}}),D=Object(y.a)(j.prototype,"playerShouldDiscard",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return!1}}),Object(y.a)(j.prototype,"currentPlayer",[k.computed],Object.getOwnPropertyDescriptor(j.prototype,"currentPlayer"),j.prototype),Object(y.a)(j.prototype,"sortedPlayers",[k.computed],Object.getOwnPropertyDescriptor(j.prototype,"sortedPlayers"),j.prototype),Object(y.a)(j.prototype,"playerCanReserve",[k.computed],Object.getOwnPropertyDescriptor(j.prototype,"playerCanReserve"),j.prototype),q=Object(y.a)(j.prototype,"discardChipHandler",[k.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=e.chipColorForId(t),r=e.currentPlayer.chips.get(o)||0;e.currentPlayer.chips.set(o,r-1);var a=e.chipStacks.get(o)||0;e.chipStacks.set(o,a+1),e.endPlayerTurn()}}}),F=Object(y.a)(j.prototype,"singleChipHandler",[k.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=e.chipColorForId(t);e.removeChips(o,1),e.currentPlayer.addChip(o,1,!0),e.currentPlayer.tempChipCount>=3&&(e.currentPlayer.saveTempChips(),e.endPlayerTurn())}}}),I=Object(y.a)(j.prototype,"doubleChipHandler",[k.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=e.chipColorForId(t);e.removeChips(o,2),e.currentPlayer.addChip(o,2),e.endPlayerTurn()}}}),M=Object(y.a)(j.prototype,"tablePurchaseHandler",[k.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=t.split("-"),r=Number(o[0]),a=Number(o[1]),n=e.cardStacks.get(r);if(n){var l=n.splice(a,1)[0];e.handleCardPurchaseTransaction(l)}else e.endPlayerTurn()}}}),x=Object(y.a)(j.prototype,"reservePurchaseHandler",[k.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=t.split("-"),r=Number(o[1]),a=e.currentPlayer.reserveCards.splice(r,1)[0];e.handleCardPurchaseTransaction(a)}}}),Object(y.a)(j.prototype,"handleCardPurchaseTransaction",[k.action],Object.getOwnPropertyDescriptor(j.prototype,"handleCardPurchaseTransaction"),j.prototype),A=Object(y.a)(j.prototype,"returnChipHandler",[k.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=e.chipColorForId(t);e.currentPlayer.removeChip(o,1,!0),e.addChips(o,1)}}}),B=Object(y.a)(j.prototype,"reserveHandler",[k.action],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){var e=this;return function(t){var o=t.split("-"),r=Number(o[0]),a=Number(o[1]),n=e.cardStacks.get(r);if(n){var l=n.splice(a,1)[0];e.currentPlayer.reserveCards.push(l);var c=e.chipStacks.get("wild");c&&c>0&&(e.chipStacks.set("wild",c-1),e.currentPlayer.addChip("wild")),e.endPlayerTurn()}}}}),j),$={gameStore:new(G=function(){function e(){Object(d.a)(this,e),Object(v.a)(this,"game",J,this)}return Object(b.a)(e,[{key:"reset",value:function(){this.game=new Z(2)}}]),e}(),J=Object(y.a)(G.prototype,"game",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return new Z(2)}}),G)},_=o(7),ee=o(11),te=(o(24),o(25),Object(_.a)((function(e){var t=e.purchaseHandler,o=e.reserveHandler;return m.a.createElement("div",{className:"CardComponent",id:e.id},m.a.createElement("div",{className:"point-value"},e.card.pointValue>0?e.card.pointValue:"\xa0"),m.a.createElement("div",{className:"indicator"},m.a.createElement("div",{className:"color-indicator "+e.card.color}," ")),m.a.createElement("div",{className:"costs"},e.card.costs.map((function(e){var t="cost ".concat(e.color);return m.a.createElement("div",{className:t,key:t},e.amount)}))),m.a.createElement("div",{className:"actions"},o&&m.a.createElement("button",{id:e.id,onClick:function(e){return o(e.currentTarget.id)}},"hold"),t&&m.a.createElement("button",{id:e.id,onClick:function(e){return t(e.currentTarget.id)}},"buy")))}))),oe=Object(_.a)((L=function(e){Object(g.a)(o,e);var t=Object(f.a)(o);function o(){var e;Object(d.a)(this,o);for(var r=arguments.length,a=new Array(r),n=0;n<r;n++)a[n]=arguments[n];return e=t.call.apply(t,[this].concat(a)),Object(v.a)(e,"tempName",Q,Object(ee.a)(e)),e.handleChange=function(t){e.tempName=t.target.value},e.handleSubmit=function(t){e.props.player.name=e.tempName,t.preventDefault()},e.handleBlur=function(t){e.props.player.name=e.tempName},e}return Object(b.a)(o,[{key:"render",value:function(){var e=this.props.player,t=$.gameStore.game.currentPlayer===this.props.player,o=t?"active":"inactive",r=$.gameStore.game.playerShouldDiscard&&t,a=r?"warning":"normal";return m.a.createElement("div",{className:"PlayerComponent"},m.a.createElement("div",{className:o},m.a.createElement("div",null,"player ",e.name),m.a.createElement("div",null,"id ",e.id),m.a.createElement("div",null,"points ",e.totalPoints),m.a.createElement("div",{className:"chips-container"},m.a.createElement("div",{className:"background ".concat(a)},r?"player chips (click to discard)":"player chips"),m.a.createElement("div",{className:"player-chips"},Array.from(e.chips).filter((function(e){return e[1]>0})).map((function(e){var t=e[0],o=e[1];return r?m.a.createElement("div",{id:"".concat(t,"-discard"),className:"chip ".concat(t),onClick:function(e){return $.gameStore.game.discardChipHandler(e.currentTarget.id)},key:Math.random()},o):m.a.createElement("div",{className:"chip ".concat(t),key:Math.random()},o)})))),m.a.createElement("div",{className:"cards-container"},m.a.createElement("div",{className:"background"},"player tableau"),m.a.createElement("div",{className:"player-cards"},e.tableau.map((function(e){return m.a.createElement("div",{className:"card ".concat(e.color),key:Math.random()},e.pointValue)})))),m.a.createElement("div",{className:"reserve-cards-container"},m.a.createElement("div",{className:"background"},"reserve cards"),m.a.createElement("div",{className:"reserve-cards"},e.reserveCards.map((function(e,t){console.log("here's a card: ",e);var o="reservecard-".concat(t),r=$.gameStore.game.playerCanPurchase(e)?$.gameStore.game.reservePurchaseHandler:void 0;return m.a.createElement(te,{id:o,card:e,purchaseHandler:r,reserveHandler:void 0})})))),m.a.createElement("div",{className:"nobles-container"},m.a.createElement("div",{className:"player-nobles"},e.nobles.map((function(e){return m.a.createElement("div",{className:"noble",key:Math.random()},e.pointValue)}))),m.a.createElement("form",{onSubmit:this.handleSubmit},m.a.createElement("label",null,"change name:",m.a.createElement("input",{type:"text",value:this.tempName,onChange:this.handleChange,onBlur:this.handleBlur}))))))}}]),o}(m.a.Component),Q=Object(y.a)(L.prototype,"tempName",[k.observable],{configurable:!0,enumerable:!0,writable:!0,initializer:function(){return""}}),K=L))||K,re=(o(26),function(e){return m.a.createElement("div",{className:"NobleComponent"},m.a.createElement("div",{className:"point-value"},e.noble.pointValue),e.noble.cardRequirements.map((function(e){return m.a.createElement("div",{className:"requirement "+e.color,key:"".concat(e.color).concat(e.amount)},e.amount)})))}),ae=(o(27),Object(_.a)((function(e){var t=$.gameStore.game,o=t.cardStacks.get(e.cardCostTier);if(!o)return m.a.createElement("div",null);var r=o.length-4,a=r>0?r:0,n=o.slice(0,4);return m.a.createElement("div",{className:"CardStackComponent"},m.a.createElement("div",{className:"card remaining"},a," cards remaining"),n.map((function(o,r){var a="".concat(e.cardCostTier,"-").concat(r);return m.a.createElement(te,{key:a,id:a,card:o,purchaseHandler:t.playerCanPurchase(o)?t.tablePurchaseHandler:void 0,reserveHandler:t.playerCanReserve?t.reserveHandler:void 0})})))}))),ne=(o(28),Object(_.a)((function(){var e=$.gameStore.game,t=e.currentPlayer,o=Array.from(e.chipStacks.keys());return m.a.createElement("div",{className:"ChipStackComponent"},m.a.createElement("div",{className:"temp-chips"},"temp chips:",m.a.createElement("br",null),t.tempChips.map((function(t){return m.a.createElement("div",{key:t},m.a.createElement("div",{className:"chip-stack ".concat(t)},"1"),m.a.createElement("button",{id:"".concat(t,"-temp-chip"),onClick:function(t){return e.returnChipHandler(t.currentTarget.id)}},"return"))}))),o.map((function(o){var r,a=e.chipStacks.get(o)||0,n=(null===(r=t.tempChips.find((function(e){return e===o})))||void 0===r?void 0:r.length)?1:0,l=a&&0===n&&!e.playerShouldDiscard,c=a>=4&&!t.tempChipCount&&!e.playerShouldDiscard;return m.a.createElement("div",{key:o},m.a.createElement("div",{className:"chip-stack ".concat(o)},a),"wild"!==o&&m.a.createElement(m.a.Fragment,null,m.a.createElement("button",{id:"".concat(o,"-1"),disabled:!l,onClick:function(t){return e.singleChipHandler(t.currentTarget.id)}},"grab 1"),m.a.createElement("button",{id:"".concat(o,"-2"),disabled:!c,onClick:function(t){return e.doubleChipHandler(t.currentTarget.id)}},"grab 2")))})))}))),le=Object(_.a)(U=function(e){Object(g.a)(o,e);var t=Object(f.a)(o);function o(){return Object(d.a)(this,o),t.apply(this,arguments)}return Object(b.a)(o,[{key:"render",value:function(){var e=$.gameStore.game;return m.a.createElement("div",{className:"GameComponent"},m.a.createElement("div",null,"round #",e.currentRound,", players:",e.players.map((function(e){return m.a.createElement(oe,{player:e,key:e.id})}))),m.a.createElement("div",null,"chips:",m.a.createElement(ne,null)),m.a.createElement("div",null,m.a.createElement("div",null,"cards:",m.a.createElement(ae,{cardCostTier:1}),m.a.createElement(ae,{cardCostTier:2}),m.a.createElement(ae,{cardCostTier:3})),m.a.createElement("div",{className:"nobles-container"},"nobles:",e.nobles.map((function(e){return m.a.createElement(re,{noble:e,key:V(e)})})))))}}]),o}(m.a.Component))||U,ce=(o(29),function(e){Object(g.a)(o,e);var t=Object(f.a)(o);function o(){return Object(d.a)(this,o),t.apply(this,arguments)}return Object(b.a)(o,[{key:"render",value:function(){if(!this.props.game.winningPlayers)return m.a.createElement(m.a.Fragment,null);var e=this.props.game.winningPlayers[0].totalPoints,t="with ".concat(e," points"),o=1===this.props.game.winningPlayers.length?"the winner, ".concat(t,", is:"):"the winners, ".concat(t,", are:");return m.a.createElement("div",{className:"ResultsComponent"},m.a.createElement("div",{className:"announce"},o),this.props.game.winningPlayers.map((function(e){return m.a.createElement("div",{className:"winner",key:Math.random()},e.name)})),m.a.createElement("hr",null),m.a.createElement("div",null,"all players, final scores:",m.a.createElement("table",null,m.a.createElement("tbody",null,this.props.game.sortedPlayers.map((function(e){return m.a.createElement("tr",{key:Math.random()},m.a.createElement("td",null,"player Name: ",e.name),m.a.createElement("td",null,"player score: ",e.totalPoints),m.a.createElement("td",null,"development cards: ",e.tableau.length))})))),m.a.createElement("button",{onClick:function(){return $.gameStore.reset()}},"reset game")))}}]),o}(m.a.Component));var ie=function(){return m.a.createElement("div",{className:"App"},m.a.createElement("div",null,"it not splendor"),m.a.createElement(ue,null))},ue=Object(_.a)((function(){var e=$.gameStore.game;return e.winningPlayers?m.a.createElement(ce,{game:e}):m.a.createElement(le,null)}));o(30),o(33);h.a.render(m.a.createElement(m.a.StrictMode,null,m.a.createElement(ie,null)),document.getElementById("root"))}],[[16,1,2]]]);
//# sourceMappingURL=main.fc4378c2.chunk.js.map